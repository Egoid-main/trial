{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{useNavigate}from'react-router-dom';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ChatTestPage=()=>{const[messages,setMessages]=useState([]);const[inputMessage,setInputMessage]=useState('');const[isLoading,setIsLoading]=useState(false);const[currentQuestion,setCurrentQuestion]=useState('');const[responseId,setResponseId]=useState('');const[isComplete,setIsComplete]=useState(false);const[error,setError]=useState(null);const navigate=useNavigate();const messagesEndRef=useRef(null);useEffect(()=>{startChat();},[]);useEffect(()=>{scrollToBottom();},[messages]);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});};const startChat=async()=>{try{setIsLoading(true);const response=await axios.post('/api/ai-chat/start');setResponseId(response.data.responseId);setCurrentQuestion(response.data.currentQuestion);setMessages([{role:'assistant',content:response.data.message}]);}catch(err){setError('AI 채팅을 시작하는 중 오류가 발생했습니다.');}finally{setIsLoading(false);}};const sendMessage=async()=>{if(!inputMessage.trim()||isLoading||isComplete)return;const userMessage=inputMessage.trim();setInputMessage('');setIsLoading(true);setError(null);// 사용자 메시지 추가\nconst newMessages=[...messages,{role:'user',content:userMessage}];setMessages(newMessages);try{const response=await axios.post('/api/ai-chat/continue',{responseId,userMessage,currentQuestion,chatHistory:newMessages});setCurrentQuestion(response.data.currentQuestion);setMessages(response.data.chatHistory);setIsComplete(response.data.isComplete);if(response.data.isComplete){// 검사 완료 시 결과 페이지로 이동\nsetTimeout(()=>{navigate(\"/ai-results/\".concat(responseId));},2000);}}catch(err){setError('메시지를 전송하는 중 오류가 발생했습니다.');}finally{setIsLoading(false);}};const handleKeyPress=e=>{if(e.key==='Enter'&&!e.shiftKey){e.preventDefault();sendMessage();}};const getQuestionNumber=question=>{const questionMap={'Q1':1,'Q2':2,'Q3':3,'Q4':4,'Q5':5,'Q6':6,'Q7':7};return questionMap[question]||0;};const progress=currentQuestion?getQuestionNumber(currentQuestion)/7*100:0;return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card\",style:{height:'80vh',display:'flex',flexDirection:'column'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{borderBottom:'1px solid #eee',paddingBottom:'20px',marginBottom:'20px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"h2\",{style:{margin:0},children:\"AI \\uB0B4\\uC801\\uC695\\uB9DD \\uAC80\\uC0AC\"}),currentQuestion&&!isComplete&&/*#__PURE__*/_jsxs(\"span\",{style:{color:'#666',fontSize:'14px'},children:[getQuestionNumber(currentQuestion),\"/7\"]})]}),!isComplete&&/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",style:{marginTop:'15px'},children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:\"\".concat(progress,\"%\")}})})]}),/*#__PURE__*/_jsxs(\"div\",{style:{flex:1,overflowY:'auto',padding:'20px 0',border:'1px solid #eee',borderRadius:'8px',marginBottom:'20px',backgroundColor:'#fafafa'},children:[messages.map((message,index)=>/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:message.role==='user'?'flex-end':'flex-start',marginBottom:'15px',padding:'0 20px'},children:/*#__PURE__*/_jsx(\"div\",{style:{maxWidth:'70%',padding:'12px 16px',borderRadius:'18px',backgroundColor:message.role==='user'?'#007bff':'#fff',color:message.role==='user'?'#fff':'#333',boxShadow:'0 1px 3px rgba(0,0,0,0.1)',wordWrap:'break-word',whiteSpace:'pre-wrap'},children:message.content})},index)),isLoading&&/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'flex-start',padding:'0 20px',marginBottom:'15px'},children:/*#__PURE__*/_jsx(\"div\",{style:{padding:'12px 16px',borderRadius:'18px',backgroundColor:'#fff',boxShadow:'0 1px 3px rgba(0,0,0,0.1)',color:'#666'},children:\"AI\\uAC00 \\uB2F5\\uBCC0\\uC744 \\uC900\\uBE44\\uD558\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4...\"})}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",style:{marginBottom:'20px'},children:error}),isComplete&&/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center',padding:'20px',backgroundColor:'#d4edda',color:'#155724',borderRadius:'8px',marginBottom:'20px'},children:\"\\uAC80\\uC0AC\\uAC00 \\uC644\\uB8CC\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4! \\uACB0\\uACFC\\uB97C \\uBD84\\uC11D\\uD558\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4...\"}),!isComplete&&/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'10px'},children:[/*#__PURE__*/_jsx(\"textarea\",{value:inputMessage,onChange:e=>setInputMessage(e.target.value),onKeyPress:handleKeyPress,placeholder:\"\\uB2F5\\uBCC0\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694...\",disabled:isLoading,style:{flex:1,padding:'12px',border:'1px solid #ddd',borderRadius:'20px',resize:'none',fontSize:'16px',minHeight:'50px',maxHeight:'120px'}}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,disabled:!inputMessage.trim()||isLoading,className:\"btn\",style:{padding:'12px 24px',borderRadius:'20px',minWidth:'80px'},children:isLoading?'전송중...':'전송'})]}),/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center',marginTop:'20px'},children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/'),className:\"btn btn-secondary\",style:{padding:'10px 20px'},children:\"\\uD648\\uC73C\\uB85C \\uB3CC\\uC544\\uAC00\\uAE30\"})})]})});};export default ChatTestPage;","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","axios","jsx","_jsx","jsxs","_jsxs","ChatTestPage","messages","setMessages","inputMessage","setInputMessage","isLoading","setIsLoading","currentQuestion","setCurrentQuestion","responseId","setResponseId","isComplete","setIsComplete","error","setError","navigate","messagesEndRef","startChat","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","response","post","data","role","content","message","err","sendMessage","trim","userMessage","newMessages","chatHistory","setTimeout","concat","handleKeyPress","e","key","shiftKey","preventDefault","getQuestionNumber","question","questionMap","progress","className","children","style","height","display","flexDirection","borderBottom","paddingBottom","marginBottom","justifyContent","alignItems","margin","color","fontSize","marginTop","width","flex","overflowY","padding","border","borderRadius","backgroundColor","map","index","maxWidth","boxShadow","wordWrap","whiteSpace","ref","textAlign","gap","value","onChange","target","onKeyPress","placeholder","disabled","resize","minHeight","maxHeight","onClick","minWidth"],"sources":["C:/Users/asus/OneDrive/문서/창업/Egoid/runch/trial/client/src/components/ChatTestPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\ninterface ChatMessage {\r\n  role: 'user' | 'assistant';\r\n  content: string;\r\n}\r\n\r\ninterface ChatTestPageProps {}\r\n\r\nconst ChatTestPage: React.FC<ChatTestPageProps> = () => {\r\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [currentQuestion, setCurrentQuestion] = useState('');\r\n  const [responseId, setResponseId] = useState('');\r\n  const [isComplete, setIsComplete] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const navigate = useNavigate();\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    startChat();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  const startChat = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await axios.post('/api/ai-chat/start');\r\n      setResponseId(response.data.responseId);\r\n      setCurrentQuestion(response.data.currentQuestion);\r\n      setMessages([{ role: 'assistant', content: response.data.message }]);\r\n    } catch (err) {\r\n      setError('AI 채팅을 시작하는 중 오류가 발생했습니다.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (!inputMessage.trim() || isLoading || isComplete) return;\r\n\r\n    const userMessage = inputMessage.trim();\r\n    setInputMessage('');\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    // 사용자 메시지 추가\r\n    const newMessages = [...messages, { role: 'user' as const, content: userMessage }];\r\n    setMessages(newMessages);\r\n\r\n    try {\r\n      const response = await axios.post('/api/ai-chat/continue', {\r\n        responseId,\r\n        userMessage,\r\n        currentQuestion,\r\n        chatHistory: newMessages\r\n      });\r\n\r\n      setCurrentQuestion(response.data.currentQuestion);\r\n      setMessages(response.data.chatHistory);\r\n      setIsComplete(response.data.isComplete);\r\n\r\n      if (response.data.isComplete) {\r\n        // 검사 완료 시 결과 페이지로 이동\r\n        setTimeout(() => {\r\n          navigate(`/ai-results/${responseId}`);\r\n        }, 2000);\r\n      }\r\n    } catch (err) {\r\n      setError('메시지를 전송하는 중 오류가 발생했습니다.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  const getQuestionNumber = (question: string) => {\r\n    const questionMap: { [key: string]: number } = {\r\n      'Q1': 1, 'Q2': 2, 'Q3': 3, 'Q4': 4, \r\n      'Q5': 5, 'Q6': 6, 'Q7': 7\r\n    };\r\n    return questionMap[question] || 0;\r\n  };\r\n\r\n  const progress = currentQuestion ? (getQuestionNumber(currentQuestion) / 7) * 100 : 0;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"card\" style={{ height: '80vh', display: 'flex', flexDirection: 'column' }}>\r\n        {/* 헤더 */}\r\n        <div style={{ \r\n          borderBottom: '1px solid #eee', \r\n          paddingBottom: '20px', \r\n          marginBottom: '20px' \r\n        }}>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n            <h2 style={{ margin: 0 }}>AI 내적욕망 검사</h2>\r\n            {currentQuestion && !isComplete && (\r\n              <span style={{ color: '#666', fontSize: '14px' }}>\r\n                {getQuestionNumber(currentQuestion)}/7\r\n              </span>\r\n            )}\r\n          </div>\r\n          \r\n          {!isComplete && (\r\n            <div className=\"progress-bar\" style={{ marginTop: '15px' }}>\r\n              <div \r\n                className=\"progress-fill\" \r\n                style={{ width: `${progress}%` }}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* 채팅 메시지 영역 */}\r\n        <div style={{ \r\n          flex: 1, \r\n          overflowY: 'auto', \r\n          padding: '20px 0',\r\n          border: '1px solid #eee',\r\n          borderRadius: '8px',\r\n          marginBottom: '20px',\r\n          backgroundColor: '#fafafa'\r\n        }}>\r\n          {messages.map((message, index) => (\r\n            <div\r\n              key={index}\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: message.role === 'user' ? 'flex-end' : 'flex-start',\r\n                marginBottom: '15px',\r\n                padding: '0 20px'\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  maxWidth: '70%',\r\n                  padding: '12px 16px',\r\n                  borderRadius: '18px',\r\n                  backgroundColor: message.role === 'user' ? '#007bff' : '#fff',\r\n                  color: message.role === 'user' ? '#fff' : '#333',\r\n                  boxShadow: '0 1px 3px rgba(0,0,0,0.1)',\r\n                  wordWrap: 'break-word',\r\n                  whiteSpace: 'pre-wrap'\r\n                }}\r\n              >\r\n                {message.content}\r\n              </div>\r\n            </div>\r\n          ))}\r\n          \r\n          {isLoading && (\r\n            <div style={{ \r\n              display: 'flex', \r\n              justifyContent: 'flex-start', \r\n              padding: '0 20px',\r\n              marginBottom: '15px'\r\n            }}>\r\n              <div style={{\r\n                padding: '12px 16px',\r\n                borderRadius: '18px',\r\n                backgroundColor: '#fff',\r\n                boxShadow: '0 1px 3px rgba(0,0,0,0.1)',\r\n                color: '#666'\r\n              }}>\r\n                AI가 답변을 준비하고 있습니다...\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        {/* 에러 메시지 */}\r\n        {error && (\r\n          <div className=\"error\" style={{ marginBottom: '20px' }}>\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        {/* 완료 메시지 */}\r\n        {isComplete && (\r\n          <div style={{ \r\n            textAlign: 'center', \r\n            padding: '20px',\r\n            backgroundColor: '#d4edda',\r\n            color: '#155724',\r\n            borderRadius: '8px',\r\n            marginBottom: '20px'\r\n          }}>\r\n            검사가 완료되었습니다! 결과를 분석하고 있습니다...\r\n          </div>\r\n        )}\r\n\r\n        {/* 입력 영역 */}\r\n        {!isComplete && (\r\n          <div style={{ display: 'flex', gap: '10px' }}>\r\n            <textarea\r\n              value={inputMessage}\r\n              onChange={(e) => setInputMessage(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              placeholder=\"답변을 입력하세요...\"\r\n              disabled={isLoading}\r\n              style={{\r\n                flex: 1,\r\n                padding: '12px',\r\n                border: '1px solid #ddd',\r\n                borderRadius: '20px',\r\n                resize: 'none',\r\n                fontSize: '16px',\r\n                minHeight: '50px',\r\n                maxHeight: '120px'\r\n              }}\r\n            />\r\n            <button\r\n              onClick={sendMessage}\r\n              disabled={!inputMessage.trim() || isLoading}\r\n              className=\"btn\"\r\n              style={{\r\n                padding: '12px 24px',\r\n                borderRadius: '20px',\r\n                minWidth: '80px'\r\n              }}\r\n            >\r\n              {isLoading ? '전송중...' : '전송'}\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {/* 홈으로 돌아가기 버튼 */}\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <button \r\n            onClick={() => navigate('/')}\r\n            className=\"btn btn-secondary\"\r\n            style={{ padding: '10px 20px' }}\r\n          >\r\n            홈으로 돌아가기\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatTestPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}